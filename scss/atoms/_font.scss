@mixin font-size($font-sizes, $breakpoints: $breakpoints, $last: '&') {
  @include scope($breakpoints, fz) {
    &#{$literal-separator} {
      &xxs {#{$last}{ font-size: xx-small }}
      &xs  {#{$last}{ font-size: x-small }}
      &s   {#{$last}{ font-size: small }}
      &m   {#{$last}{ font-size: medium }}
      &l   {#{$last}{ font-size: large }}
      &xl  {#{$last}{ font-size: x-large }}
      &xxl {#{$last}{ font-size: xx-large }}
      &lr  {#{$last}{ font-size: larger }}
      &sr  {#{$last}{ font-size: smaller }}
      &i   {#{$last}{ font-size: inherit }}
    }

    @include classes($font-sizes, $last, font-size)
  }
}

@mixin font-family($values: null, $breakpoints: $breakpoints, $last: '&') {
  @include scope($breakpoints, ff) {
    &#{$literal-separator} {
      &s  {#{$last}{ font-family: serif }}
      &ss {#{$last}{ font-family: sans-serif }}
      &m  {#{$last}{ font-family: monospace }}
      &c  {#{$last}{ font-family: cursive }}
      &f  {#{$last}{ font-family: fantasy }}
      &i  {#{$last}{ font-family: inherit }}
    }

    @include classes($values, $last, font-family)
  }
}

@mixin font-weight($breakpoints: $breakpoints, $last: '&') {
  @include scope($breakpoints, fw) {
    &#{$ordinal-separator} {
      @for $weight from 1 through 9 {
        &#{$weight * 100} {#{$last}{ font-weight: $weight * 100 }}
      }
    }

    &#{$literal-separator} {
      &n  {#{$last}{ font-weight: normal }}
      &b  {#{$last}{ font-weight: bold }}
      &br {#{$last}{ font-weight: bolder }}
      &lr {#{$last}{ font-weight: lighter }}
      &i  {#{$last}{ font-weight: inherit }}
    }
  }
}

@mixin font-style($breakpoints: $breakpoints, $last: '&') {
  @include scope($breakpoints, fs) {
    &#{$literal-separator} {
      &n {#{$last}{ font-style: normal }}
      &i {#{$last}{ font-style: italic }}
      &o {#{$last}{ font-style: oblique }}
    }
  }
}

@mixin font-variant($breakpoints: $breakpoints, $last: '&') {
  @include scope($breakpoints, fv) {
    &#{$literal-separator} {
      &cl  {#{$last}{ font-variant: common-ligatures }}
      &apc {#{$last}{ font-variant: all-petite-caps }}
      &asc {#{$last}{ font-variant: all-small-caps }}
      &sc  {#{$last}{ font-variant: small-caps }}
      &c   {#{$last}{ font-variant: contextual }}
      &df  {#{$last}{ font-variant: diagonal-fractions }}
      &sf  {#{$last}{ font-variant: stacked-fractions }}
      &hf  {#{$last}{ font-variant: historical-forms }}
      &hl  {#{$last}{ font-variant: historical-ligatures }}
      &i   {#{$last}{ font-variant: inherit }}
      &n   {#{$last}{ font-variant: normal }}
      &tn  {#{$last}{ font-variant: tabular-nums }}
      &pn  {#{$last}{ font-variant: proportional-nums }}
      &pw  {#{$last}{ font-variant: proportional-width }}
    }
  }
}

@mixin font-size-adjust($breakpoints: $breakpoints, $last: '&') {
  @include scope($breakpoints, fza) {
    &#{$literal-separator} {
      &n {#{$last}{ font-size-adjust: none }}
    }
  }
}

@mixin font-stretch($breakpoints: $breakpoints, $last: '&') {
  @include scope($breakpoints, fst) {
    &#{$literal-separator} {
      &n  {#{$last}{ font-stretch: normal }}
      &uc {#{$last}{ font-stretch: ultra-condensed }}
      &ec {#{$last}{ font-stretch: extra-condensed }}
      &c  {#{$last}{ font-stretch: condensed }}
      &sc {#{$last}{ font-stretch: semi-condensed }}
      &se {#{$last}{ font-stretch: semi-expanded }}
      &e  {#{$last}{ font-stretch: expanded }}
      &ee {#{$last}{ font-stretch: extra-expanded }}
      &ue {#{$last}{ font-stretch: ultra-expanded }}
    }
  }
}

@mixin -webkit-font-smoothing($breakpoints: $breakpoints, $last: '&') {
  @include scope($breakpoints, -wfsm) {
    &#{$literal-separator} {
      &a  {#{$last}{ -webkit-font-smoothing: antialiased }}
      &sa {#{$last}{ -webkit-font-smoothing: subpixel-antialiased }}
      &n  {#{$last}{ -webkit-font-smoothing: none }}
    }
  }
}

@mixin -moz-osx-font-smoothing($breakpoints: $breakpoints, $last: '&') {
  @include scope($breakpoints, -mfsm) {
    &#{$literal-separator} {
      &a {#{$last}{ -moz-osx-font-smoothing: auto }}
      &g {#{$last}{ -moz-osx-font-smoothing: grayscale }}
    }
  }
}
